<?xml version="1.0"?>

<flight_control name="F-16 FC">

  	<!-- Declare some interface properties -->
  	<property>fcs/alpha-norm</property>
  	<property>fcs/hook-engage</property>
  	<property>fcs/canopy-engage</property>
  	<property>fcs/fbw-override</property>


<!-- begin: control system by Nikolai V. Chr. -->
    <property value="2">fcs/fly-by-wire/K_A</property><!-- should be 2000, but JSB cannot handle that -->
    <property value="1">fcs/fly-by-wire/enable-q</property>
    <property value="1">fcs/fly-by-wire/enable-nz</property>
    <property value="1">fcs/fly-by-wire/enable-int</property>
    <property value="1">fcs/fly-by-wire/enable-fake</property>
    <property value="1">fcs/fly-by-wire/enable-alpha</property>
    
    <property value="0">fcs/fly-by-wire/pitch/alpha-indicated-lagged</property>
    <property value="0">fcs/fly-by-wire/pitch/pitch-loop-ground-product</property>

    <channel execrate="1" name="FCS Lookup">

        <fcs_function name="fcs/fly-by-wire/q_c">
            <function>
                <!--<v>1400</v> standby gain-->
                <p>aero/qbar-psf</p>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/P_s">
            <function>
                <p>atmosphere/P-psf</p>
                <!--<v>2116</v> standby gain-->
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/MLG-GND">
            <default value="0"/>
            <test logic="AND" value="1">
                gear/unit[1]/WOW eq 1
                gear/unit[2]/WOW eq 1
            </test>
        </switch>

        <switch name="fcs/fly-by-wire/condition-a">
            <default value="0"/>
            <test logic="OR" value="1">
                gear/gear-cmd-norm == 1
                /controls/flight/flaps gt 0
            </test>
            <test logic="AND" value="1">
                /systems/refuel/serviceable == 1
                fcs/fly-by-wire/q_c lt 646
            </test>
        </switch>

        <fcs_function name="fcs/fly-by-wire/qcps-ratio">
            <function>
                <quotient>
                    <p>fcs/fly-by-wire/q_c</p>
                    <p>fcs/fly-by-wire/P_s</p>
                </quotient>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/pitch/F2">
            <function>
                <table>
                <independentVar lookup="row">fcs/fly-by-wire/qcps-ratio</independentVar>
                <tableData>
                    0     0.50
                    0.53  0.50
                    1.79 -1.00
                </tableData>
            </table>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/pitch/F3">
            <function>
                <table>
                    <independentVar lookup="row">fcs/fly-by-wire/q_c</independentVar>
                    <tableData>
                        0.0 1
                        300 1
                        800 0.533
                        3000 0.083
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/ari/F7">
            <function>
                <table>
                    <independentVar lookup="row">fcs/fly-by-wire/qcps-ratio</independentVar>
                    <tableData>
                        0.0   0
                        0.187 0
                        1.129 1
                        1.709 1
                        3.29  0
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/yaw/F8">
            <function>
                <table>
                    <independentVar lookup="row">fcs/fly-by-wire/qcps-ratio</independentVar>
                    <tableData>
                        0.0  0.5
                        2.04 0.5
                        3.23 1.0
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/tef/F9">
            <function>
                <table>
                    <independentVar lookup="row">fcs/fly-by-wire/qcps-ratio</independentVar>
                    <tableData>
                        0.0  0
                        0.787 0
                        1.008 -2.0
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/roll/F10">
            <function>
                <table>
                    <independentVar lookup="row">fcs/fly-by-wire/qcps-ratio</independentVar>
                    <tableData>
                        0.0   0.25
                        0.694 0.25
                        1.132 0.50
                    </tableData>
                </table>
            </function>
        </fcs_function>

    </channel>































    <channel execrate="1" name="Roll">

        <fcs_function name="fcs/fly-by-wire/roll/stick-force-lbf">
            <function>
                <table>
                    <independentVar lookup="row">fcs/aileron-cmd-norm</independentVar>
                    <tableData>
                       -1 -17
                        0   0
                        1  17
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/roll/command-deg_s">
            <function>
                <table>
                    <independentVar lookup="row">fcs/fly-by-wire/roll/stick-force-lbf</independentVar>
                    <independentVar lookup="column">gear/gear-pos-norm</independentVar>
                    <tableData>
                                 0    1
                         -17  -308 -167
                         -11   -80  -43.38
                          -6   -20   11
                          -1     0    0
                           0     0    0
                           1     0    0
                           6    20   11
                          11    80   43.38
                          17   308  167
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <aerosurface_scale name="fcs/fly-by-wire/roll/trim-scaled">
            <input>fcs/roll-trim-cmd-norm</input>
            <zero_centered> true </zero_centered>
            <domain>
                <min> -1.0 </min>
                <max>  1.0 </max>
            </domain>
            <range>
                <min> -40 </min>
                <max>  40 </max>
            </range>
        </aerosurface_scale>

        <switch name="fcs/fly-by-wire/roll/gain-switch">
            <default value="1.0"/>
            <test logic="OR" value="0.542">
                fcs/fly-by-wire/condition-a == 1
            </test>
        </switch>

        <pure_gain name="fcs/fly-by-wire/roll/ground-gain">
            <input>fcs/fly-by-wire/roll/command-deg_s</input>
            <gain> fcs/fly-by-wire/roll/gain-switch </gain>
        </pure_gain>

        <summer name="fcs/fly-by-wire/roll/loop-sum">
            <input>fcs/fly-by-wire/roll/ground-gain</input>
            <input>-fcs/fly-by-wire/roll/loop-top-lead</input>
            <input>-fcs/fly-by-wire/roll/loop-bottom-lead</input>
        </summer>

        <lag_filter name="fcs/fly-by-wire/roll/loop-lag">
            <input> fcs/fly-by-wire/roll/loop-sum </input>
            <c1> 10 </c1>
        </lag_filter>

        <summer name="fcs/fly-by-wire/roll/loop-lag-neg">
            <input>fcs/fly-by-wire/roll/loop-lag</input>
            <clipto>
                <min>-10000</min>
                <max>0</max>
            </clipto>
        </summer>

        <summer name="fcs/fly-by-wire/roll/loop-lag-pos">
            <input>fcs/fly-by-wire/roll/loop-lag</input>
            <clipto>
                <min> 0 </min>
                <max> 10000 </max>
            </clipto>
        </summer>

        <lead_lag_filter name="fcs/fly-by-wire/roll/loop-bottom-lead">
          <input> fcs/fly-by-wire/roll/loop-lag-neg </input>
          <c1> 6 </c1>
          <c2> 0 </c2>
          <c3> 1 </c3>
          <c4> 20 </c4>
          <clipto>
                <min>-10000</min>
                <max>0</max>
          </clipto>
        </lead_lag_filter>

        <lead_lag_filter name="fcs/fly-by-wire/roll/loop-top-lead">
          <input> fcs/fly-by-wire/roll/loop-lag-pos </input>
          <c1> 6 </c1>
          <c2> 0 </c2>
          <c3> 1 </c3>
          <c4> 20 </c4>
          <clipto>
            <min> 0 </min>
            <max> 10000 </max>
          </clipto>
        </lead_lag_filter>

        <summer name="fcs/fly-by-wire/roll/loop-sum-end">
            <input>-fcs/fly-by-wire/roll/loop-lag</input>
            <input>-fcs/fly-by-wire/roll/trim-gain</input>
            <input>fcs/fly-by-wire/roll/roll-filter</input>
        </summer>

        <pure_gain name="fcs/fly-by-wire/roll/trim-gain">
            <input>fcs/fly-by-wire/roll/trim-scaled</input>
            <gain> 1.67 </gain>
        </pure_gain>

        <pure_gain name="velocities/p-aero-deg_sec">
            <input>velocities/p-aero-rad_sec</input>
            <gain> 57.2957795 </gain>
        </pure_gain>

        <second_order_filter name="fcs/fly-by-wire/roll/lead-exit">
          <input> velocities/p-aero-deg_sec </input>
          <c1> 1 </c1>
          <c2> 0 </c2>
          <c3> 3025 </c3>
          <c4> 1 </c4>
          <c5> 0 </c5>
          <c6> 3025 </c6>
        </second_order_filter>

        <second_order_filter name="fcs/fly-by-wire/roll/roll-filter">
          <input> velocities/p-aero-deg_sec </input>
          <c1> 4 </c1>
          <c2> 64 </c2>
          <c3> 6400 </c3>
          <c4> 1 </c4>
          <c5> 80 </c5>
          <c6> 6400 </c6>
        </second_order_filter>

        <pure_gain name="fcs/fly-by-wire/roll/yaw-rate-input">
            <input> velocities/r-aero-deg_sec </input>
            <gain> 8.34 </gain>
        </pure_gain>

        <switch name="fcs/fly-by-wire/roll/switch">
            <default value="fcs/fly-by-wire/roll/loop-sum-end"/>
            <test logic="AND" value="fcs/fly-by-wire/roll/yaw-rate-input">
                aero/alpha-deg ge 29
                fcs/fly-by-wire/prototype == 0
            </test>
        </switch>

        <pure_gain name="fcs/fly-by-wire/roll/final">
            <input>fcs/fly-by-wire/roll/switch</input>
            <gain> 0.12 </gain>
            <clipto>
                <min> -21.5 </min>
                <max>  21.5 </max>
            </clipto>
        </pure_gain>

        <summer name="fcs/fly-by-wire/roll/top-sum">
            <input>fcs/fly-by-wire/roll/final</input>
            <input>-fcs/fly-by-wire/roll/bottom-deadzone</input>
            <input>fcs/fly-by-wire/tef/tef-pos-deg</input>
        </summer>

        <summer name="fcs/fly-by-wire/roll/bottom-sum">
            <input>-fcs/fly-by-wire/roll/final</input>
            <input>-fcs/fly-by-wire/roll/top-deadzone</input>
            <input>fcs/fly-by-wire/tef/tef-pos-deg</input>
        </summer>

        <fcs_function name="fcs/fly-by-wire/roll/top-deadzone-pos">
            <function>
                <difference>
                    <property> fcs/fly-by-wire/roll/top-sum </property>
                    <value> 21.5 </value>
                </difference>
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/roll/top-deadzone">
            <default value="0"/>
            <test logic="AND" value="fcs/fly-by-wire/roll/top-deadzone-pos">
                fcs/fly-by-wire/roll/top-sum gt  21.5
            </test>
        </switch>

        <fcs_function name="fcs/fly-by-wire/roll/bottom-deadzone-pos">
            <function>
                <difference>
                    <property> fcs/fly-by-wire/roll/bottom-sum </property>
                    <value> 21.5 </value>
                </difference>
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/roll/bottom-deadzone">
            <default value="0"/>
            <test logic="AND" value="fcs/fly-by-wire/roll/bottom-deadzone-pos">
                fcs/fly-by-wire/roll/bottom-sum gt  21.5
            </test>
        </switch>

        <summer name="fcs/fly-by-wire/roll/bottom-limit">
            <input>fcs/fly-by-wire/roll/bottom-sum</input>
            <clipto>
                <min> -21.5 </min>
                <max>  21.5 </max>
            </clipto>
        </summer>

        <summer name="fcs/fly-by-wire/roll/top-limit">
            <input>fcs/fly-by-wire/roll/top-sum</input>
            <clipto>
                <min> -21.5 </min>
                <max>  21.5 </max>
            </clipto>
        </summer>

        <lag_filter name="fcs/fly-by-wire/roll/flaperon-right-lag">
            <input> fcs/fly-by-wire/roll/top-limit </input>
            <c1> 20 </c1>
            <!-- defl. limit = 20, rate limit = 80 deg/s -->
        </lag_filter>

        <fcs_function name="fcs/fly-by-wire/roll/mech-bias-right">
            <function>
                <sum>
                    <property> fcs/fly-by-wire/roll/flaperon-right-lag </property>
                    <value> -1.5 </value>
                </sum>
            </function>
        </fcs_function>

        <kinematic name="fcs/fly-by-wire/roll/flaperon-right-deflection-deg">
            <input>fcs/fly-by-wire/roll/mech-bias-right</input>
            <noscale/>
            <traverse>
                <setting>
                    <position> -80.0 </position>
                    <time>      0.0 </time>
                </setting>
                <setting>
                    <position>  80.0 </position>
                    <time>      2 </time>
                </setting>
            </traverse>
            <clipto>
                <min> -23.0 </min>
                <max>  20.0 </max>
            </clipto>
        </kinematic>

        <aerosurface_scale name="fcs/fly-by-wire/roll/flaperon-right-pos-norm">
            <input>fcs/fly-by-wire/roll/flaperon-right-deflection-deg</input>
            <zero_centered> true </zero_centered>
            <domain>
                <min> -23.0 </min>
                <max>  20.0 </max>
            </domain>
            <range>
                <min> -1.0 </min>
                <max>  0.8695 </max>
            </range>
        </aerosurface_scale>

        <lag_filter name="fcs/fly-by-wire/roll/flaperon-left-lag">
            <input> fcs/fly-by-wire/roll/bottom-limit </input>
            <c1> 20 </c1>
            <!-- defl. limit = 20, rate limit = 80 deg/s -->
        </lag_filter>

        <fcs_function name="fcs/fly-by-wire/roll/mech-bias-left">
            <function>
                <sum>
                    <property> fcs/fly-by-wire/roll/flaperon-left-lag </property>
                    <value> -1.5 </value>
                </sum>
            </function>
        </fcs_function>

        <kinematic name="fcs/fly-by-wire/roll/flaperon-left-deflection-deg">
            <input>fcs/fly-by-wire/roll/mech-bias-left</input>
            <noscale/>
            <traverse>
                <setting>
                    <position> -80.0 </position>
                    <time>      0.0 </time>
                </setting>
                <setting>
                    <position>  80.0 </position>
                    <time>      2 </time>
                </setting>
            </traverse>
            <clipto>
                <min> -23.0 </min>
                <max>  20.0 </max>
            </clipto>
        </kinematic>

        <aerosurface_scale name="fcs/fly-by-wire/roll/flaperon-left-pos-norm">
            <input>fcs/fly-by-wire/roll/flaperon-left-deflection-deg</input>
            <zero_centered> true </zero_centered>
            <domain>
                <min> -23.0 </min>
                <max>  20.0 </max>
            </domain>
            <range>
                <min> -1.0 </min>
                <max>  0.8695 </max>
            </range>
        </aerosurface_scale>

        <summer name="fcs/fly-by-wire/roll/inter-sum">
            <input>-fcs/fly-by-wire/roll/bottom-limit</input>
            <input>fcs/fly-by-wire/roll/top-limit</input>
        </summer>

        <pure_gain name="fcs/fly-by-wire/roll/inter-gain">
            <input>fcs/fly-by-wire/roll/inter-sum</input>
            <gain> 0.5 </gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/roll/inter-schedule">
            <input>fcs/fly-by-wire/roll/inter-gain</input>
            <gain> fcs/fly-by-wire/roll/F10 </gain>
        </pure_gain>

        <summer name="fcs/fly-by-wire/roll/aileron-pos-deg">
            <input>-fcs/fly-by-wire/roll/flaperon-left-deflection-deg</input>
            <input>fcs/fly-by-wire/roll/flaperon-right-deflection-deg</input>
        </summer>

        <aerosurface_scale name="fcs/fly-by-wire/roll/aileron-pos-norm">
            <input>fcs/fly-by-wire/roll/aileron-pos-deg</input>
            <zero_centered> true </zero_centered>
            <domain>
                <min> -43 </min>
                <max>  43 </max>
            </domain>
            <range>
                <min> -1.0 </min>
                <max>  1.0 </max>
            </range>
        </aerosurface_scale>

    </channel>











    <channel execrate="1" name="Aileron Rudder Interconnect">

        <fcs_function name="fcs/fly-by-wire/ari/inverter-norm">
            <function>
                <table>
                    <independentVar lookup="row">fcs/fly-by-wire/pitch/alpha-indicated-lagged</independentVar>
                    <tableData>
                        -10   0.0
                          0   1.0
                         10   0.0
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/ari/schedule-gain">
            <default value="0.65"/>
            <test logic="AND" value="1">
                fcs/fly-by-wire/prototype == 0
            </test>
        </switch>

        <fcs_function name="fcs/fly-by-wire/ari/schedule">
            <function>
                <product>
                    <p> fcs/fly-by-wire/ari/inverter-norm </p>
                    <p> fcs/fly-by-wire/ari/schedule-gain </p>
                    <p> fcs/fly-by-wire/ari/F7 </p>
                </product>
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/ari/gain-value">
            <default value="0.0375"/>
            <test logic="AND" value="0.0750">
                fcs/fly-by-wire/prototype == 0
            </test>
        </switch>

        <pure_gain name="fcs/fly-by-wire/ari/gain">
            <input>fcs/fly-by-wire/pitch/alpha-indicated-lagged</input>
            <gain> fcs/fly-by-wire/ari/gain-value </gain>
        </pure_gain>

        <summer name="fcs/fly-by-wire/ari/sum">
            <input>-fcs/fly-by-wire/ari/schedule</input>
            <input>fcs/fly-by-wire/ari/gain</input>
        </summer>

        <pure_gain name="fcs/fly-by-wire/ari/final">
            <input>fcs/fly-by-wire/ari/sum</input>
            <gain> fcs/fly-by-wire/roll/inter-gain </gain>
        </pure_gain>

    </channel>












    <channel execrate="1" name="Yaw">

        <kinematic name="fcs/fly-by-wire/yaw/rudder-cmd-norm-kinematic">
            <description>
                Real pedals can not be moved as fast as a joystick.
                This will limit the movement speed.
            </description>
            <input>fcs/rudder-cmd-norm</input>
            <noscale/>
            <traverse>
                <setting>
                    <position> -1.0 </position>
                    <time>      0.0 </time>
                </setting>
                <setting>
                    <position>  1.0 </position>
                    <time>      1.25 </time>
                </setting>
            </traverse>
        </kinematic>

        <fcs_function name="fcs/fly-by-wire/yaw/pedal-force-lbf">
            <function>
                <table>
                    <independentVar lookup="row">fcs/fly-by-wire/yaw/rudder-cmd-norm-kinematic</independentVar>
                    <tableData>
                       -1 -120
                        0    0
                        1  120
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/yaw/command-deg">
            <function>
                <table>
                    <independentVar lookup="row">fcs/fly-by-wire/yaw/pedal-force-lbf</independentVar>
                    <tableData>
                        -120  30.0
                         -15   0.0
                          15   0.0
                         120 -30.0
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <aerosurface_scale name="fcs/fly-by-wire/yaw/trim-scaled">
            <input>fcs/yaw-trim-cmd-norm</input>
            <zero_centered> true </zero_centered>
            <domain>
                <min> -1.0 </min>
                <max>  1.0 </max>
            </domain>
            <range>
                <min> -8 </min>
                <max>  8 </max>
            </range>
        </aerosurface_scale>

        <summer name="fcs/fly-by-wire/yaw/command-sum">
            <input>fcs/fly-by-wire/yaw/trim-scaled</input>
            <input>-fcs/fly-by-wire/yaw/command-deg</input>
        </summer>

        <fcs_function name="fcs/fly-by-wire/yaw/command-schedule">
            <function>
                <product>
                    <table>
                        <independentVar lookup="row">fcs/fly-by-wire/pitch/alpha-indicated-lagged</independentVar>
                        <tableData>
                            20   1.0
                            30   0.0
                        </tableData>
                    </table>
                    <p>fcs/fly-by-wire/yaw/command-sum</p>
                </product>
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/yaw/ari-input">
            <default value="fcs/fly-by-wire/ari/final"/>
            <test logic="AND" value="0">
                aero/alpha-deg ge 29
                fcs/fly-by-wire/prototype == 0
            </test>
        </switch>

        <switch name="fcs/fly-by-wire/yaw/command-switch">
            <default value="fcs/fly-by-wire/yaw/command-sum"/>
            <test logic="AND" value="fcs/fly-by-wire/yaw/command-schedule">
                fcs/fly-by-wire/prototype == 0
            </test>
        </switch>

        <summer name="fcs/fly-by-wire/yaw/command-sum-ari">
            <input>fcs/fly-by-wire/yaw/ari-input</input>
            <input>fcs/fly-by-wire/yaw/command-switch</input>
        </summer>

        <pure_gain name="fcs/fly-by-wire/yaw/g-gain">
            <input>accelerations/Ny</input>
            <gain> 19.32 </gain>
        </pure_gain>

        <pure_gain name="velocities/r-aero-deg_sec">
            <input>velocities/r-aero-rad_sec</input>
            <gain> 57.2957795 </gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/yaw/cross-gain">
            <input>fcs/fly-by-wire/roll/lead-exit</input>
            <gain> 0.01745 </gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/yaw/cross-multiplier">
            <input>fcs/fly-by-wire/pitch/alpha-indicated-lagged</input>
            <gain> fcs/fly-by-wire/yaw/cross-gain </gain>
        </pure_gain>

        <summer name="fcs/fly-by-wire/yaw/yaw-limits-sum-1">
            <input>velocities/r-aero-deg_sec</input>
            <input>-fcs/fly-by-wire/yaw/cross-multiplier</input>
        </summer>

        <lead_lag_filter name="fcs/fly-by-wire/yaw/lead">
          <input> fcs/fly-by-wire/yaw/yaw-limits-sum-1 </input>
          <c1> 3 </c1>
          <c2> 15 </c2>
          <c3> 1 </c3>
          <c4> 15 </c4>
        </lead_lag_filter>

        <lead_lag_filter name="fcs/fly-by-wire/yaw/lead-second">
          <input> fcs/fly-by-wire/yaw/lead </input>
          <c1> 1.5 </c1>
          <c2> 0 </c2>
          <c3> 1 </c3>
          <c4> 1 </c4>
        </lead_lag_filter>

        <summer name="fcs/fly-by-wire/yaw/yaw-limits-sum-2">
            <input>fcs/fly-by-wire/yaw/lead-second</input>
            <input>fcs/fly-by-wire/yaw/g-gain</input>
        </summer>

        <pure_gain name="fcs/fly-by-wire/yaw/schedule">
            <input>fcs/fly-by-wire/yaw/yaw-limits-sum-2</input>
            <gain> fcs/fly-by-wire/yaw/F8 </gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/yaw/alt-schedule">
            <input> velocities/r-aero-deg_sec </input>
            <gain> 0.75 </gain>
        </pure_gain>

        <switch name="fcs/fly-by-wire/yaw/schedule-final">
            <default value="fcs/fly-by-wire/yaw/schedule"/>
            <test logic="AND" value="fcs/fly-by-wire/yaw/alt-schedule">
                aero/alpha-deg ge 29
                fcs/fly-by-wire/prototype == 0
            </test>
        </switch>

        <summer name="fcs/fly-by-wire/yaw/rudder-sum">
            <input>fcs/fly-by-wire/yaw/schedule-final</input>
            <input>fcs/fly-by-wire/yaw/command-sum-ari</input>
        </summer>

        <second_order_filter name="fcs/fly-by-wire/yaw/final-filter">
          <input> fcs/fly-by-wire/yaw/rudder-sum </input>
          <c1> 1 </c1>
          <c2> 0 </c2>
          <c3> 1225 </c3>
          <c4> 1 </c4>
          <c5> 0 </c5>
          <c6> 1225 </c6>
        </second_order_filter>

        <lag_filter name="fcs/fly-by-wire/yaw/rudder-lag">
            <input> fcs/fly-by-wire/yaw/final-filter </input>
            <c1> 20 </c1>
            <!-- defl. limit = 30, rate limit = 120 deg/s -->
        </lag_filter>

        <kinematic name="fcs/fly-by-wire/yaw/rudder-deflection-deg">
            <input>fcs/fly-by-wire/yaw/rudder-lag</input>
            <noscale/>
            <traverse>
                <setting>
                    <position> -30.0 </position>
                    <time>      0.0 </time>
                </setting>
                <setting>
                    <position>  30.0 </position>
                    <time>      0.5 </time>
                </setting>
            </traverse>
            <clipto>
                <min> -30 </min>
                <max>  30 </max>
            </clipto>
        </kinematic>

        <aerosurface_scale name="fcs/fly-by-wire/yaw/rudder-pos-norm">
            <input>fcs/fly-by-wire/yaw/rudder-deflection-deg</input>
            <zero_centered> true </zero_centered>
            <domain>
                <min> -30.0 </min>
                <max>  30.0 </max>
            </domain>
            <range>
                <min> -1.0 </min>
                <max>  1.0 </max>
            </range>
        </aerosurface_scale>

    </channel>

















    <channel execrate="1" name="Pitch">

        <fcs_function name="fcs/fly-by-wire/pitch/stick-force-lbf">
            <function>
                <table>
                    <independentVar lookup="row">fcs/elevator-cmd-norm</independentVar>
                    <tableData>
                       -1   40
                        0    0
                        1  -17.65
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/pitch/command-g">
            <function>
                <table>
                    <independentVar lookup="row">fcs/fly-by-wire/pitch/stick-force-lbf</independentVar>
                    <tableData>
                       -17.65  -4.0
                        -7.25  -0.44
                        -1.75   0.0
                         1.75   0.0
                         7.25   0.44 
                        40.00  10.86
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <aerosurface_scale name="fcs/fly-by-wire/pitch/trim-scaled">
            <input>fcs/pitch-trim-cmd-norm</input>
            <zero_centered> true </zero_centered>
            <domain>
                <min> -1.0 </min>
                <max>  1.0 </max>
            </domain>
            <range>
                <min> -2.4 </min>
                <max>  2.4 </max>
            </range>
        </aerosurface_scale>

        <summer name="fcs/fly-by-wire/pitch/command-sum">
            <input>fcs/fly-by-wire/pitch/trim-scaled</input>
            <input>fcs/fly-by-wire/pitch/command-g</input>
        </summer>

        <fcs_function name="fcs/fly-by-wire/pitch/negative-g-limit">
            <function>
                <table>
                    <independentVar lookup="row">aero/qbar-psf</independentVar>
                    <tableData>
                        0.0      -1
                        31.32815 -1
                        187.9689 -4
                        208.8543 -4
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/pitch/negative-g-limit-final">
            <description>
                The second test is for MPO switch enabled.
                Source: The Israeli document.
            </description>
            <default value="fcs/fly-by-wire/pitch/negative-g-limit"/>
            <test logic="OR" value="-4">
                fcs/fly-by-wire/condition-a == 1
            </test>
            <test logic="AND" value="-4">
                fcs/fbw-override == 1
            </test>
        </switch>

        <summer name="fcs/fly-by-wire/pitch/g-limit">
            <input>fcs/fly-by-wire/pitch/command-sum</input>
            <clipto>
                <min>fcs/fly-by-wire/pitch/negative-g-limit-final</min>
                <max>8.0</max>
            </clipto>
        </summer>

        <switch name="fcs/fly-by-wire/pitch/g-limit-product">
            <description>
                The second test is for MPO switch enabled.
                Source: The Israeli document.
            </description>
            <default value="0.5"/>
            <test logic="AND" value="1.0">
                fcs/fly-by-wire/MLG-GND == 1
            </test>
            <test logic="AND" value="1.0">
                fcs/fbw-override == 1
                aero/alpha-deg   gt 29
            </test>
        </switch>

        <switch name="fcs/fly-by-wire/pitch/g-gain">
            <default value="1"/>
            <test logic="AND" value="2">
                fcs/fly-by-wire/prototype == 0
            </test>
        </switch>

        <pure_gain name="fcs/fly-by-wire/pitch/g-limit-product-gain">
            <input>fcs/fly-by-wire/pitch/g-limit-product</input>
            <gain> fcs/fly-by-wire/pitch/g-gain </gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/pitch/g-limit-gain">
            <input>fcs/fly-by-wire/pitch/g-limit</input>
            <gain> fcs/fly-by-wire/pitch/g-limit-product-gain </gain>
        </pure_gain>

        <lag_filter name="fcs/fly-by-wire/pitch/command-sum-limit-lagged">
            <input> fcs/fly-by-wire/pitch/g-limit-gain </input>
            <c1> 8.3 </c1>
        </lag_filter>

        <pure_gain name="fcs/fly-by-wire/pitch/alpha">
            <input>aero/alpha-deg</input>
            <gain> fcs/fly-by-wire/enable-alpha </gain>
        </pure_gain>

        <summer name="fcs/fly-by-wire/pitch/alpha-indicated-clamp">
            <input>fcs/fly-by-wire/pitch/alpha</input><!-- should really be indicated -->
            <clipto>
                <min>-5</min>
                <max>30</max>
            </clipto>
        </summer>

        <switch name="fcs/fly-by-wire/pitch/alpha-indicated-switch">
            <default value="fcs/fly-by-wire/pitch/alpha-indicated-clamp"/>
            <test logic="AND" value="0">
                fcs/fly-by-wire/MLG-GND == 1
            </test>
        </switch>

        <fcs_function name="fcs/fly-by-wire/pitch/roll-rate-abs">
            <function>
                <abs>
                    <product>
                        <property> velocities/p-aero-rad_sec </property>
                        <v> 57.29577951308233 </v>
                    </product>
                </abs>
            </function>
        </fcs_function>

        <pure_gain name="fcs/fly-by-wire/pitch/roll-rate-gain">
            <input>fcs/fly-by-wire/pitch/roll-rate-abs</input>
            <gain> 0.15 </gain>
        </pure_gain>

        <lag_filter name="fcs/fly-by-wire/pitch/roll-rate-lagged">
            <input> fcs/fly-by-wire/pitch/roll-rate-gain </input>
            <c1> 0.67 </c1>
        </lag_filter>

        <fcs_function name="fcs/fly-by-wire/pitch/roll-rate-schedule">
            <function>
                <table>
                    <independentVar lookup="row">fcs/fly-by-wire/pitch/roll-rate-lagged</independentVar>
                    <tableData>
                        20      0
                        54    5.4
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <pure_gain name="fcs/fly-by-wire/pitch/fake-alpha">
            <input> fcs/fly-by-wire/pitch/roll-rate-schedule </input>
            <gain> fcs/fly-by-wire/enable-fake </gain>
        </pure_gain>

        <lag_filter name="fcs/fly-by-wire/pitch/alpha-indicated-lagged">
            <input> fcs/fly-by-wire/pitch/alpha-indicated-switch </input>
            <c1> 10 </c1>
        </lag_filter>

        <lag_filter name="fcs/fly-by-wire/pitch/fake-alpha-lagged">
            <input> fcs/fly-by-wire/pitch/fake-alpha </input>
            <c1> 10 </c1>
        </lag_filter>

        <summer name="fcs/fly-by-wire/pitch/alpha-sum">
            <input> fcs/fly-by-wire/pitch/alpha-indicated-lagged </input>
            <input> fcs/fly-by-wire/pitch/fake-alpha-lagged </input>
        </summer>

        <switch name="fcs/fly-by-wire/pitch/alpha-indicated-mpo">
            <description>
                The test is for MPO switch enabled.
                Source: The Israeli document.

                Should fake alpha be allowed through? (probably not, the pilot wants full control of elevator even when rolling)
            </description>
            <default value="fcs/fly-by-wire/pitch/alpha-sum"/>
            <test logic="AND" value="0"><!-- consider to lag this 0 -->
                fcs/fbw-override == 1
                aero/alpha-deg   gt 29
            </test>
        </switch>

        <fcs_function name="fcs/fly-by-wire/pitch/alpha-indicated-sum">
            <function>
                <sum>
                    <property> fcs/fly-by-wire/pitch/alpha-indicated-mpo </property>
                    <value> -20.4 </value>
                    <property> fcs/fly-by-wire/pitch/pitch-rate-gain </property>
                </sum>
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/pitch/alpha-gain">
            <default value="0.5"/>
            <test logic="AND" value="1">
                fcs/fly-by-wire/prototype == 0
            </test>
        </switch>

        <pure_gain name="fcs/fly-by-wire/pitch/alpha-indicated-gain">
            <description></description>
            <input>fcs/fly-by-wire/pitch/alpha-indicated-sum</input>
            <gain> fcs/fly-by-wire/pitch/alpha-gain </gain>
            <clipto>
                <min> 0 </min>
                <max>10000</max>
            </clipto>
        </pure_gain>

        <summer name="fcs/fly-by-wire/pitch/command-sum-limit-alpha">
            <input> -fcs/fly-by-wire/pitch/command-sum-limit-lagged </input>
            <input> fcs/fly-by-wire/pitch/alpha-indicated-gain </input>
        </summer>

        <summer name="fcs/fly-by-wire/pitch/command-sum-limit-alpha-pitch">
            <input> fcs/fly-by-wire/pitch/command-sum-limit-alpha </input>
            <input> fcs/fly-by-wire/pitch/pitch-rate-lead-2nd </input>
        </summer>

        <switch name="fcs/fly-by-wire/pitch/main-gain">
            <default value="3"/>
            <test logic="AND" value="1.5">
                fcs/fly-by-wire/prototype == 0
            </test>
        </switch>

        <pure_gain name="fcs/fly-by-wire/pitch/command-sum-limit-alpha-pitch-gain">
            <input>fcs/fly-by-wire/pitch/command-sum-limit-alpha-pitch</input>
            <gain> fcs/fly-by-wire/pitch/main-gain </gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/pitch/pitch-loop-gain">
            <input>fcs/fly-by-wire/pitch/command-sum-limit-alpha-pitch-gain</input>
            <gain> fcs/fly-by-wire/pitch/F3 </gain>
        </pure_gain>

        <summer name="fcs/fly-by-wire/pitch/pitch-loop-gain-sum">
            <input> fcs/fly-by-wire/pitch/pitch-loop-gain </input>
            <input> -fcs/fly-by-wire/pitch/pitch-loop-gain-feedback-gain </input>
        </summer>

        <switch name="fcs/fly-by-wire/pitch/pitch-loop-gain-switch">
            <default value="fcs/fly-by-wire/pitch/pitch-loop-gain-sum"/>
            <test logic="AND" value="fcs/fly-by-wire/pitch/pitch-loop-ground-product">
                fcs/fly-by-wire/MLG-GND == 1
            </test>
        </switch>

        <summer name="fcs/fly-by-wire/pitch/pitch-loop-gain-sum-extra">
            <input> fcs/fly-by-wire/pitch/pitch-loop-gain-switch </input>
            <input> -fcs/fly-by-wire/pitch/amplifier </input>
            <input> -fcs/fly-by-wire/pitch/int-balance </input>
        </summer>

        <integrator name="fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int">
            <input> fcs/fly-by-wire/pitch/pitch-loop-gain-sum-extra </input>
            <c1> 5 </c1>
        </integrator>

        <pure_gain name="fcs/fly-by-wire/pitch/pitch-loop-ground-product">
            <description>diagram say 0.5, but negative makes more sense</description>
            <input>fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int</input>
            <gain> -0.5 </gain>
        </pure_gain>

        <fcs_function name="fcs/fly-by-wire/pitch/amp-deadzone-neg">
            <function>
                <difference>
                    <property> fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int </property>
                    <v> -25 </v>
                </difference>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/pitch/amp-deadzone-pos">
            <function>
                <difference>
                    <property> fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int </property>
                    <v> 25 </v>
                </difference>
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/pitch/amp-deadzone">
            <default value="0"/>
            <test logic="AND" value="fcs/fly-by-wire/pitch/amp-deadzone-pos">
                fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int gt  25
            </test>
            <test logic="AND" value="fcs/fly-by-wire/pitch/amp-deadzone-neg">
                fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int lt  -25
            </test>
        </switch>

        <pure_gain name="fcs/fly-by-wire/pitch/amplifier">
            <input>fcs/fly-by-wire/pitch/amp-deadzone</input>
            <gain> fcs/fly-by-wire/K_A </gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/pitch/integrator">
            <input>fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int</input>
            <gain> fcs/fly-by-wire/enable-int </gain>
        </pure_gain>

        <summer name="fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int-sum">
            <input> fcs/fly-by-wire/pitch/integrator </input>
            <input> fcs/fly-by-wire/pitch/pitch-loop-gain </input>
        </summer>

        <summer name="fcs/fly-by-wire/pitch/int-balance-summer">
            <description>test system not made, so is 0</description>
            <input> fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int-sum </input>
            <input> -fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int-sum </input>
        </summer>

        <pure_gain name="fcs/fly-by-wire/pitch/int-balance">
            <input>fcs/fly-by-wire/pitch/int-balance-summer</input>
            <gain> 0.5 </gain>
        </pure_gain>

        <summer name="fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int-sum-sum">
            <input> fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int-sum </input>
            <input> fcs/fly-by-wire/pitch/alpha-feedback </input>
        </summer>
        
        <fcs_function name="fcs/fly-by-wire/pitch/pitch-loop-gain-feedback-deadzone-neg">
            <function>
                <difference>
                    <property> fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int-sum-sum </property>
                    <v> -25 </v>
                </difference>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/pitch/pitch-loop-gain-feedback-deadzone-pos">
            <function>
                <difference>
                    <property> fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int-sum-sum </property>
                    <v> 25 </v>
                </difference>
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/pitch/pitch-loop-gain-feedback-deadzone">
            <default value="0"/>
            <test logic="AND" value="fcs/fly-by-wire/pitch/pitch-loop-gain-feedback-deadzone-pos">
                fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int-sum-sum gt  25
            </test>
            <test logic="AND" value="fcs/fly-by-wire/pitch/pitch-loop-gain-feedback-deadzone-neg">
                fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int-sum-sum lt  -25
            </test>
        </switch>

        <pure_gain name="fcs/fly-by-wire/pitch/pitch-loop-gain-feedback-gain">
            <input>fcs/fly-by-wire/pitch/pitch-loop-gain-feedback-deadzone</input>
            <gain> 5 </gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/pitch/alpha-feedback">
            <input>fcs/fly-by-wire/pitch/alpha-indicated-lagged</input>
            <gain> fcs/fly-by-wire/pitch/F2 </gain>
        </pure_gain>

        <summer name="fcs/fly-by-wire/pitch/pitch-loop-gain-final">
            <input> fcs/fly-by-wire/pitch/pitch-loop-gain-sum-int-sum </input>
            <input> fcs/fly-by-wire/pitch/alpha-feedback </input>
        </summer>

        <pure_gain name="fcs/fly-by-wire/pitch/q">
            <input>velocities/q-aero-rad_sec</input>
            <gain> fcs/fly-by-wire/enable-q </gain>
        </pure_gain>

        <pure_gain name="velocities/q-aero-deg_sec">
            <input>fcs/fly-by-wire/pitch/q</input>
            <gain> 57.2957795 </gain>
        </pure_gain>

        <washout_filter name="fcs/fly-by-wire/pitch/q-washout">
          <input> velocities/q-aero-deg_sec </input>
          <c1> 1 </c1>
        </washout_filter>

        <pure_gain name="fcs/fly-by-wire/pitch/q-gain-1">
            <input>fcs/fly-by-wire/pitch/q-washout</input>
            <gain> 0.7 </gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/pitch/pitch-rate-gain">
            <input>fcs/fly-by-wire/pitch/q-gain-1</input>
            <gain> fcs/fly-by-wire/pitch/F3 </gain>
        </pure_gain>

        <switch name="fcs/fly-by-wire/pitch/bias-top">
            <default value="6"/>
            <test logic="AND" value="0">
                fcs/fly-by-wire/MLG-GND == 1
            </test>
        </switch>

        <fcs_function name="fcs/fly-by-wire/pitch/bias-middle">
            <function>
                <v> 9 </v>
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/pitch/bias-bottom">
            <default value="0"/>
            <test logic="AND" value="9">
                fcs/fly-by-wire/condition-a == 1
            </test>
        </switch>

        <lag_filter name="fcs/fly-by-wire/pitch/bias-top-lag">
            <input> fcs/fly-by-wire/pitch/bias-top </input>
            <c1> 10 </c1>
        </lag_filter>

        <lag_filter name="fcs/fly-by-wire/pitch/bias-bottom-lag">
            <input> fcs/fly-by-wire/pitch/bias-bottom </input>
            <c1> 0.125 </c1>
        </lag_filter>

        <summer name="fcs/fly-by-wire/pitch/bias1">
            <input> -fcs/fly-by-wire/pitch/bias-bottom-lag </input>
            <input> fcs/fly-by-wire/pitch/bias-middle </input>
        </summer>

        <summer name="fcs/fly-by-wire/pitch/bias2">
            <input> fcs/fly-by-wire/pitch/bias-top-lag </input>
            <input> fcs/fly-by-wire/pitch/bias1 </input>
        </summer>

        <summer name="fcs/fly-by-wire/pitch/pitch-rate-gain-sum">
            <input> fcs/fly-by-wire/pitch/pitch-rate-gain </input>
            <input> -fcs/fly-by-wire/pitch/bias2 </input>
            <input> fcs/fly-by-wire/pitch/alpha-indicated-lagged </input>
        </summer>

        <switch name="fcs/fly-by-wire/pitch/pitch-gain">
            <default value="0.161"/>
            <test logic="AND" value="0.322">
                fcs/fly-by-wire/prototype == 0
            </test>
        </switch>

        <pure_gain name="fcs/fly-by-wire/pitch/pitch-rate-gain-sum-gain">
            <input>fcs/fly-by-wire/pitch/pitch-rate-gain-sum</input>
            <gain> fcs/fly-by-wire/pitch/pitch-gain </gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/pitch/pitch-rate-upper">
            <input>fcs/fly-by-wire/pitch/pitch-rate-gain-sum-gain</input>
            <gain> 1 </gain>
            <clipto>
                <min> 0 </min>
                <max>10000</max>
            </clipto>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/pitch/pitch-rate-lower">
            <input>fcs/fly-by-wire/pitch/pitch-rate-gain-sum-gain</input>
            <gain> 1 </gain>
            <clipto>
                <min> -10000 </min>
                <max> 0 </max>
            </clipto>
        </pure_gain>

        <switch name="fcs/fly-by-wire/pitch/pitch-rate-lower-switch">
            <description>
                Is 1.0 or 10 in diagram, but does not make sense to me.
            </description>
            <default value="0"/>
            <test logic="AND" value="0.1">
                fcs/fly-by-wire/condition-a == 1
            </test>
        </switch>

        <lag_filter name="fcs/fly-by-wire/pitch/pitch-rate-lower-lag">
            <description>diagram say 0.125, but that does a pitch up for too long after takeoff</description>
            <input> fcs/fly-by-wire/pitch/pitch-rate-lower-switch </input>
            <c1> 12.5 </c1>
        </lag_filter>

        <pure_gain name="fcs/fly-by-wire/pitch/pitch-rate-lower-gain">
            <input>fcs/fly-by-wire/pitch/pitch-rate-lower</input>
            <gain> fcs/fly-by-wire/pitch/pitch-rate-lower-lag </gain>
        </pure_gain>

        <summer name="fcs/fly-by-wire/pitch/pitch-rate-gain-sum-gain-sum">
            <input> fcs/fly-by-wire/pitch/pitch-rate-upper </input>
            <input> fcs/fly-by-wire/pitch/pitch-rate-lower-gain </input>
            <input> fcs/fly-by-wire/pitch/pitch-rate-gain-2-sum </input>
        </summer>

        <fcs_function name="accelerations/a_n">
            <description>
                Page 43: Calc of G-force.

                I had some trouble using the Nz, but don't remember what it was.
            </description>
            <function>
                <quotient>
                    <sum>
                        <product>
                            <property> velocities/q-rad_sec </property>
                            <property> velocities/u-fps </property>
                        </product>
                        <product>
                            <v>-1</v>
                            <property> velocities/p-rad_sec </property>
                            <property> velocities/v-fps </property>
                        </product>
                        <product>
                            <property> accelerations/gravity-ft_sec2 </property>
                            <cos>
                                <property> attitude/theta-rad </property>
                            </cos>
                            <cos>
                                <property> attitude/phi-rad </property>
                            </cos>
                        </product>
                        <product>
                            <v>-1</v>
                            <property> accelerations/wdot-ft_sec2 </property>
                        </product>
                    </sum>
                    <property> accelerations/gravity-ft_sec2 </property>
                </quotient>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/pitch/normal-1">
            <function>
                <product>
                    <p>fcs/fly-by-wire/enable-nz</p>
                    <difference>
                        <property> accelerations/a_n </property>
                        <value> 1 </value>
                    </difference>
                </product>
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/pitch/normal-1-special">
            <description>This prevents NaN to propagate through the system</description>
            <default value="0"/>
            <test logic="AND" value="fcs/fly-by-wire/pitch/normal-1">
                accelerations/a_n lt  30
                accelerations/a_n gt -30
            </test>
        </switch>

        <switch name="fcs/fly-by-wire/pitch/normal-gain-value">
            <default value="0.5"/>
            <test logic="AND" value="1">
                fcs/fly-by-wire/prototype == 0
            </test>
        </switch>

        <pure_gain name="fcs/fly-by-wire/pitch/normal-gain">
            <input>fcs/fly-by-wire/pitch/normal-1-special</input>
            <gain> fcs/fly-by-wire/pitch/normal-gain-value </gain>
        </pure_gain>

        <summer name="fcs/fly-by-wire/pitch/pitch-rate-gain-2-sum">
            <input> fcs/fly-by-wire/pitch/normal-gain </input>
            <input> fcs/fly-by-wire/pitch/q-gain-2 </input>
        </summer>

        <switch name="fcs/fly-by-wire/pitch/q-product">
            <default value="0.167"/>
            <test logic="AND" value="0.231">
                fcs/fly-by-wire/MLG-GND == 1
            </test>
        </switch>

        <switch name="fcs/fly-by-wire/pitch/q-product-gain">
            <default value="1"/>
            <test logic="AND" value="2">
                fcs/fly-by-wire/prototype == 0
            </test>
        </switch>

        <pure_gain name="fcs/fly-by-wire/pitch/q-product-final">
            <input>fcs/fly-by-wire/pitch/q-product</input>
            <gain> fcs/fly-by-wire/pitch/q-product-gain </gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/pitch/q-gain-2">
            <input>fcs/fly-by-wire/pitch/q-washout</input>
            <gain> fcs/fly-by-wire/pitch/q-product-final </gain>
        </pure_gain>

        <lead_lag_filter name="fcs/fly-by-wire/pitch/pitch-rate-lead">
          <input> fcs/fly-by-wire/pitch/pitch-rate-gain-sum-gain-sum </input>
          <c1> 3 </c1>
          <c2> 12 </c2>
          <c3> 1 </c3>
          <c4> 12 </c4>
        </lead_lag_filter>

        <second_order_filter name="fcs/fly-by-wire/pitch/pitch-rate-lead-2nd">
          <description>on old diagram looks to be 2.5, not 2 nor 25</description>
          <input> fcs/fly-by-wire/pitch/pitch-rate-lead </input>
          <c1> 2.5 </c1>
          <c2> 20 </c2>
          <c3> 3500 </c3>
          <c4> 1 </c4>
          <c5> 40 </c5>
          <c6> 3500 </c6>
        </second_order_filter>

        <summer name="fcs/fly-by-wire/pitch/tp-left-sum">
            <input> fcs/fly-by-wire/pitch/pitch-loop-gain-final </input>
            <input> fcs/fly-by-wire/roll/inter-schedule </input> 
        </summer>

        <summer name="fcs/fly-by-wire/pitch/bt-left-sum">
            <input> fcs/fly-by-wire/pitch/pitch-loop-gain-final </input>
            <input> -fcs/fly-by-wire/roll/inter-schedule </input>
        </summer>

        <lag_filter name="fcs/fly-by-wire/pitch/tp-lag">
            <input> fcs/fly-by-wire/pitch/tp-left-sum </input>
            <c1> 20.2 </c1>
            <!-- defl. limit = 25, rate limit = 60 deg/s -->
        </lag_filter>

        <lag_filter name="fcs/fly-by-wire/pitch/bt-lag">
            <input> fcs/fly-by-wire/pitch/bt-left-sum </input>
            <c1> 20.2 </c1>
            <!-- defl. limit = 25, rate limit = 60 deg/s -->
        </lag_filter>

        <summer name="fcs/fly-by-wire/pitch/tp-right-sum">
            <input> fcs/fly-by-wire/pitch/tp-lag </input>
            <input> fcs/fly-by-wire/pitch/bt-lag </input>
        </summer>

        <summer name="fcs/fly-by-wire/pitch/bt-right-sum">
            <input> fcs/fly-by-wire/pitch/tp-lag </input>
            <input> -fcs/fly-by-wire/pitch/bt-lag </input>
        </summer>

        <pure_gain name="fcs/fly-by-wire/pitch/horz-tail-deflection">
            <input>fcs/fly-by-wire/pitch/tp-right-sum</input>
            <gain> 0.5 </gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/pitch/horz-tail-diff-deflection">
            <input>fcs/fly-by-wire/pitch/bt-right-sum</input>
            <gain> 0.5 </gain>
        </pure_gain>

        <kinematic name="fcs/fly-by-wire/pitch/horz-tail-deflection-deg">
            <input>fcs/fly-by-wire/pitch/horz-tail-deflection</input>
            <noscale/>
            <traverse>
                <setting>
                    <position> -25.0 </position>
                    <time>      0.0 </time>
                </setting>
                <setting>
                    <position>  25.0 </position>
                    <time>      0.8333 </time>
                </setting>
            </traverse>
            <clipto>
                <min> -25 </min>
                <max>  25 </max>
            </clipto>
        </kinematic>

        <aerosurface_scale name="fcs/fly-by-wire/pitch/horz-tail-deflection-norm">
          <input>fcs/fly-by-wire/pitch/horz-tail-deflection-deg</input>
          <domain>
            <min>-25</min>
            <max>25</max>
          </domain>
          <range>
            <min>-1</min>
            <max>1</max>
          </range>
        </aerosurface_scale>

        <fcs_function name="fcs/fly-by-wire/pitch/block15-horz-tail-factor">
            <description>
                Block-15 and above had the horizontal tail surface enlarged
                by 25% for better control. This data does not factor that in
                so do it ourselves.
            </description>
            <function>
                <table>
                    <independentVar lookup="row">fcs/fly-by-wire/pitch/horz-tail-deflection-deg</independentVar>
                    <tableData>
                     -25.0      1.25
                      0.0       1.0
                      25.0      1.25
                    </tableData>
                </table>
            </function>
        </fcs_function>

        <kinematic name="fcs/fly-by-wire/pitch/horz-tail-diff-deflection-deg">
            <input>fcs/fly-by-wire/pitch/horz-tail-diff-deflection</input>
            <noscale/>
            <traverse>
                <setting>
                    <position> -25.0 </position>
                    <time>      0.0 </time>
                </setting>
                <setting>
                    <position>  25.0 </position>
                    <time>      0.8333 </time>
                </setting>
            </traverse>
            <clipto>
                <min> -25 </min>
                <max>  25 </max>
            </clipto>
        </kinematic>

        <summer name="fcs/fly-by-wire/pitch/horz-tail-left-deflection-deg">
            <input> fcs/fly-by-wire/pitch/horz-tail-deflection-deg </input>
            <input> -fcs/fly-by-wire/pitch/horz-tail-diff-deflection-deg </input>
        </summer>

        <summer name="fcs/fly-by-wire/pitch/horz-tail-right-deflection-deg">
            <input> fcs/fly-by-wire/pitch/horz-tail-deflection-deg </input>
            <input> fcs/fly-by-wire/pitch/horz-tail-diff-deflection-deg </input>
        </summer>

    </channel>














    <channel name="Throttle">

        <fcs_function name="fcs/fly-by-wire/throttle/pos-norm">
            <description>Page 153 of secondary doc</description>
            <function>
                <table>
                    <independentVar lookup="row">fcs/throttle-cmd-norm</independentVar>
                    <tableData>
                      0.0       0.0
                      0.77      1.0
                      1.0       2.0
                    </tableData>
                </table>
            </function>
            <output>fcs/throttle-pos-norm</output>
        </fcs_function>

    </channel>









    <channel execrate="1" name="Leading edge flaps">

        <fcs_function name="fcs/fly-by-wire/lef/input-factor">
            <function>
                <value>1.38</value>
            </function>
        </fcs_function>

        <lead_lag_filter name="fcs/fly-by-wire/lef/lead-lag">
          <input> fcs/fly-by-wire/lef/input-factor </input>
          <c1> 2 </c1>
          <c2> 7.25 </c2>
          <c3> 1 </c3>
          <c4> 7.25 </c4>
        </lead_lag_filter>

        <pure_gain name="fcs/fly-by-wire/lef/alpha-gain">
            <input>fcs/fly-by-wire/lef/lead-lag</input>
            <gain>aero/alpha-deg</gain>
        </pure_gain>

        <fcs_function name="fcs/fly-by-wire/lef/cmd-pos">
            <function>
                <difference>
                    <p>fcs/fly-by-wire/lef/alpha-gain</p>
                    <sum>
                        <product>
                            <value>9.05</value>
                            <quotient>
                                <p>aero/qbar-psf</p><!-- dynamic pressure -->
                                <p>atmosphere/P-psf</p><!-- static pressure -->
                            </quotient>
                        </product>
                        <v>1.45</v>
                    </sum>
                </difference>
            </function>
        </fcs_function>

        <lag_filter name="fcs/fly-by-wire/lef/pos-direct">
            <input> fcs/fly-by-wire/lef/cmd-pos </input>
            <c1> 0.136 </c1>
        </lag_filter>

        <kinematic name="fcs/fly-by-wire/lef/lef-pos-deg">
            <input>fcs/fly-by-wire/lef/pos-direct</input>
            <noscale/>
            <traverse>
                <setting>
                    <position>0</position>
                    <time>0.0</time>
                </setting>
                <setting>
                    <position>25</position>
                    <time>1</time><!-- 25 degs per second -->
                </setting>
            </traverse>
            <clipto>
                <min>0</min>
                <max>25</max>
            </clipto>
        </kinematic>

        <pure_gain name="fcs/fly-by-wire/lef/lef-pos-rad">
            <input>fcs/fly-by-wire/lef/lef-pos-deg</input>
            <gain>0.017453</gain>
        </pure_gain>

        <aerosurface_scale name="fcs/fly-by-wire/lef/lef-pos-norm">
            <input>fcs/fly-by-wire/lef/lef-pos-deg</input>
            <zero_centered> true </zero_centered>
            <domain>
                <min> 0 </min>
                <max> 25 </max>
            </domain>
            <range>
                <min>0</min>                
                <max>1</max>
            </range>
        </aerosurface_scale>

        <fcs_function name="fcs/fly-by-wire/lef/lef-pos-r-norm">
            <function>
                <difference>
                    <v>1</v>
                    <p>fcs/fly-by-wire/lef/lef-pos-norm</p>
                </difference>
            </function>
        </fcs_function>

    </channel>













    <channel name="Trailing edge flaps">

        <switch name="fcs/fly-by-wire/tef/cmd-gear">
            <default value="0"/>
            <test logic="AND" value="1">
                gear/gear-cmd-norm == 1
            </test>
        </switch>

        <switch name="fcs/fly-by-wire/tef/cmd-switch">
            <default value="fcs/fly-by-wire/tef/cmd-gear"/>
            <test logic="AND" value="1">
                /controls/flight/flaps gt 0
            </test>
        </switch>

        <fcs_function name="fcs/fly-by-wire/tef/cmd">
            <function>
                <product>
                    <p>fcs/fly-by-wire/tef/cmd-switch</p>
                    <table>
                        <independentVar lookup="row">velocities/vc-kts</independentVar>
                        <tableData>
                            250 20
                            370  0
                        </tableData>
                    </table>
                </product>
            </function>
        </fcs_function>

        <summer name="fcs/fly-by-wire/tef/F9-limit">
            <input> fcs/fly-by-wire/tef/F9 </input>
            <clipto>
                <min> -2 </min>
                <max>  2 </max>
            </clipto>
        </summer>

        <summer name="fcs/fly-by-wire/tef/sum">
            <input> fcs/fly-by-wire/tef/cmd </input>
            <input> -fcs/fly-by-wire/tef/int </input>
            <input> fcs/fly-by-wire/tef/F9-limit </input>
            <clipto>
                <min> -0.625 </min>
                <max>  0.625 </max>
            </clipto>
        </summer>

        <integrator name="fcs/fly-by-wire/tef/int">
            <input> fcs/fly-by-wire/tef/sum </input>
            <c1> 8 </c1>
        </integrator>

        <fcs_function name="fcs/fly-by-wire/tef/tef-pos-deg">
            <function>
                <sum>
                    <property> fcs/fly-by-wire/tef/int </property>
                    <value> 1.5 </value>
                </sum>
            </function>
        </fcs_function>

        <pure_gain name="fcs/fly-by-wire/tef/tef-pos-norm">
            <description>Using integrator output as mechanical bias should not be feed into aerodynamics</description>
            <input>fcs/fly-by-wire/tef/int</input>
            <gain>0.05</gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/tef/tef-pos-deg-hud">
            <description>This value should be displayed in HUD.</description>
            <input>fcs/fly-by-wire/tef/tef-pos-norm</input>
            <gain>20</gain>
        </pure_gain>

    </channel>








    <channel name="YF-16 Fly-by-wire mappings to model">

        <pure_gain name="fcs/fly-by-wire/model/rudder-pos-norm">
            <description>One to one</description>
            <input>fcs/fly-by-wire/yaw/rudder-pos-norm</input>
            <gain>1</gain>
            <output>fcs/rudder-pos-norm</output>
        </pure_gain>

        <pure_gain name="fcs/dht-right-pos-rad">
            <description>Degrees to radians</description>
            <input>fcs/fly-by-wire/pitch/horz-tail-right-deflection-deg</input>
            <gain>0.017453</gain>
        </pure_gain>

        <pure_gain name="fcs/dht-left-pos-rad">
            <description>Degrees to -radians</description>
            <input>fcs/fly-by-wire/pitch/horz-tail-left-deflection-deg</input>
            <gain>-0.017453</gain>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/model/left-aileron-pos-norm">
            <description>Degrees to 21.5 degrees</description>
            <input>fcs/fly-by-wire/roll/flaperon-left-deflection-deg</input>
            <gain>0.0465</gain>
            <output>fcs/left-aileron-pos-norm</output>
        </pure_gain>

        <pure_gain name="fcs/fly-by-wire/model/right-aileron-pos-norm">
            <description>Degrees to 21.5 degrees.</description>
            <input>fcs/fly-by-wire/roll/flaperon-right-deflection-deg</input>
            <gain>0.0465</gain>
            <output>fcs/right-aileron-pos-norm</output>
        </pure_gain>

        <pure_gain name="fcs/left-flaperon-norm">
            <description>Degrees to -20 degrees</description>
            <input>fcs/fly-by-wire/roll/flaperon-left-deflection-deg</input>
            <gain>-0.05</gain>
        </pure_gain>

        <pure_gain name="fcs/right-flaperon-norm">
            <description>Degrees to 20 degrees</description>
            <input>fcs/fly-by-wire/roll/flaperon-right-deflection-deg</input>
            <gain>0.05</gain>
        </pure_gain>

        <pure_gain name="fcs/lef-pos-deg">
            <description>One to one</description>
            <input>fcs/fly-by-wire/lef/lef-pos-deg</input>
            <gain>1</gain>
        </pure_gain>

        <!-- the below components rounds flaps position in degrees to zero decimal points: -->

        <fcs_function name="fcs/fly-by-wire/model/flap-pos-deg-with-frac">
            <function>
                <product>
                    <v>0.1</v>
                    <integer>
                        <product>
                            <v>10</v>
                            <p>fcs/fly-by-wire/tef/tef-pos-deg-hud</p>
                        </product>
                    </integer>
                </product>
            </function>
        </fcs_function>

        <fcs_function name="fcs/fly-by-wire/model/flap-pos-deg-frac">
            <function>
                <fraction>
                      <p>fcs/fly-by-wire/model/flap-pos-deg-with-frac</p>
                </fraction>
            </function>
        </fcs_function>

        <switch name="fcs/fly-by-wire/model/flap-pos-deg-frac-add">
            <default value="0"/>
            <test logic="AND" value="1">
                fcs/fly-by-wire/model/flap-pos-deg-frac ge 0.5
            </test>
            <test logic="AND" value="-1">
                fcs/fly-by-wire/model/flap-pos-deg-frac le -0.5
            </test>
        </switch>

        <fcs_function name="fcs/fly-by-wire/model/flap-pos-deg-final">
            <function>
                <sum>
                    <integer>
                        <p>fcs/fly-by-wire/tef/tef-pos-deg-hud</p>
                    </integer>
                    <p>fcs/fly-by-wire/model/flap-pos-deg-frac-add</p>
                </sum>
            </function>
            <output>fcs/flap-pos-deg</output>
        </fcs_function>

    </channel>
<!-- end: control system by Nikolai V. Chr. -->

















































  <channel name="Landing Gear">

   <switch name="fcs/gear-wow">
    <default value="0"/>
    <test logic="AND" value="1">
     gear/unit[1]/WOW eq 1
     gear/unit[2]/WOW eq 1
    </test>
   </switch>

   <kinematic name="fcs/gear-control">
    <input>gear/gear-cmd-norm</input>
    <traverse>
     <setting>
      <position>0</position>
      <time>0</time>
     </setting>
     <setting>
      <position>1</position>
      <time>5</time>
     </setting>
    </traverse>
    <output>gear/gear-pos-norm</output>
   </kinematic>

   <scheduled_gain name="fcs/scheduled-steer-pos-deg">
    <input>fcs/steer-cmd-norm</input>
    <table>
     <independentVar>velocities/vg-fps</independentVar>
     <tableData>
      10.0  32.0
      50.0   5.0
      150.0  2.0
      300.0  0.5
     </tableData>
    </table>
    <output>fcs/steer-pos-deg</output>
   </scheduled_gain>

  </channel>
   


  <channel name="Speedbrake">
   <!--
     - To prevent deep stall the Flight Computer commands speedbrake
     - deflection at high angle of attack (alpha) and low speeds. This
     - will provide just enough pitch down moment to keep the aircraft
     - under control.
     -->
   <switch name="fcs/speedbrake-alpha-limiter">
    <default value="0"/>
    <test logic="AND" value="1">
     aero/alpha-deg ge 53 
     velocities/v-fps le 18
     fcs/fly-by-wire/MLG-GND == 0
    </test>
   </switch>

   <switch name="fcs/speedbrake-initiate">
    <default value="0"/>
    <test logic="OR" value="1">
     fcs/speedbrake-alpha-limiter eq 1
     fcs/speedbrake-cmd-norm eq 1
    </test>
   </switch>

   <!--
     - Speedbrake deflection is limited to 43 degrees (instead of 60
     - degrees) when the gear is extended to prevent physical
     - speedbrake damage on touchdown.
     -->
   <scheduled_gain name="fcs/speedbrake-scheduler">
    <input>fcs/speedbrake-initiate</input>
    <table>
     <independentVar>gear/gear-cmd-norm</independentVar>
     <tableData>
      0 1.0
      1 0.71667
     </tableData>
    </table>
    <!-- <output>fcs/speedbrake-pos-norm</output> -->
   </scheduled_gain>

   <kinematic name="fcs/speedbrake-control">
    <input>fcs/speedbrake-scheduler</input>
    <traverse>
     <setting>
      <position>0</position>
      <time>0</time>
     </setting>
     <setting>
      <position>60</position>
      <time>2</time>                                      <!-- 2 seconds to deploy -->
     </setting>
    </traverse>
    <output>fcs/speedbrake-pos-deg</output>
   </kinematic>

     <aerosurface_scale name="fcs/speedbrake-position-normalizer">
     <input>fcs/speedbrake-control</input>
     <domain>
    <min>0</min>
    <max>60</max>
     </domain>
     <range>
    <min>0</min>
    <max>1</max>
     </range>
     <output>fcs/speedbrake-pos-norm</output>
   </aerosurface_scale>

  </channel>

  <channel name="Hook">

   <kinematic name="fcs/hook-control">
    <input>fcs/hook-engage</input>
    <traverse>
     <setting>
      <position>0</position>
      <time>0</time>
     </setting>
     <setting>
      <position>1</position>
      <time>2.5</time>
     </setting>
    </traverse>
    <output>fcs/hook-pos-norm</output>
   </kinematic>
   
  </channel>

  <channel name="Canopy">

   <switch name="fcs/canopy-trigger">
    <default value="fcs/canopy-engage"/>
    <test value="0">
     velocities/u-fps gt 1.0
    </test>
   </switch>

   <kinematic name="fcs/canopy-control">
    <input>fcs/canopy-trigger</input>
    <traverse>
     <setting>
      <position>0</position>
      <time>0</time>
     </setting>
     <setting>
      <position>1</position>
      <time>10</time>
     </setting>
    </traverse>
    <output>fcs/canopy-pos-norm</output>
   </kinematic>

  </channel>

 </flight_control>